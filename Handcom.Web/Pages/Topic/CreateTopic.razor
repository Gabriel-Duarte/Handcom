@page "/topiccreate"
@using Handcom.Web.Model.Request
@using Handcom.Web.Services.Interface

@inject ITopicsService _topicsService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject DialogService DialogService

<RadzenTemplateForm Data="@topicCreateRequest" Submit="@((TopicCreateRequest args) => Submit(args))">
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenStack>
            <RadzenFieldset Text="Novo Usuario">
                <RadzenStack Gap="1rem">
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12" SizeMD="4">
                            <RadzenLabel Text="Name" />
                            <RadzenRequiredValidator Component="Name" Text="Campo obrigatório" Popup Style="position: absolute" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="8">
                            <RadzenTextBox Style="width: 100%;" Name="Name" Placeholder="Ana" @bind-Value="@topicCreateRequest.Name" />
                        </RadzenColumn>
                    </RadzenRow>                
                </RadzenStack>
            </RadzenFieldset>
        </RadzenStack>
    </RadzenColumn>

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="person_add" Text="Criar usuario" />
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Icon="cancel" Text="Cancelar" Click="@Cancel" />
    </RadzenStack>
</RadzenTemplateForm>

@code {
    TopicCreateRequest topicCreateRequest = new TopicCreateRequest();

    private async Task Submit(TopicCreateRequest args)
    {
        try
        {

            var result = await _topicsService.TopicCreate(args);

            if (result.IsSuccess)
            {

                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Summary = "Success:",
                        Detail = "Usuario criado",
                        Duration = 4000
                    });

                DialogService.Close(result.Data);
            }
            else if (result.Errors is not null)
            {
                foreach (var error in result.Errors)
                {
                    NotificationService.Notify(new NotificationMessage
                        {
                            Severity = NotificationSeverity.Error,
                            Summary = "Erro:",
                            Detail = error,
                            Duration = 4000
                        });
                }
            }
            else
            {
                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Error,
                        Summary = "Erro:",
                        Detail = "Erro ao criar usuario",
                        Duration = 4000
                    });
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    void Cancel()
    {
        DialogService.Close(null);
    }
}
